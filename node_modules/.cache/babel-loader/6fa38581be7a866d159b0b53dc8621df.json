{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScript = void 0;\n/*\n * This is an enhanced version of useScript by \"useHooks.com\":\n * https://usehooks.com/useScript/\n */\n\nvar react_1 = require(\"react\");\n\nvar useScript = function (src) {\n  var _a = react_1.useState(src),\n      source = _a[0],\n      setSource = _a[1];\n\n  var _b = react_1.useState(src ? 'loading' : 'unloaded'),\n      scriptState = _b[0],\n      setScriptState = _b[1]; // on state change\n\n\n  react_1.useEffect(function () {\n    var script = document.querySelector(\"script[src=\\\"\" + source + \"\\\"]\");\n\n    if (!source) {\n      setScriptState('unloaded');\n    } else if (source && !script) {\n      // if script is not in DOM yet, add it\n      script = document.createElement('script');\n      script.src = source;\n      script.async = true; // callback on script load/error to update the hooks state\n\n      var setStateCallback = function (event) {\n        setScriptState(event.type === 'load' ? 'active' : 'error');\n      };\n\n      script.addEventListener('load', setStateCallback);\n      script.addEventListener('error', setStateCallback); // attach the script to the DOM\n\n      document.body.appendChild(script);\n    }\n\n    return function () {\n      if (script) script.remove();\n    };\n  }, [source]);\n  return [scriptState, function (sourceUrl) {\n    return setSource(sourceUrl);\n  }];\n};\n\nexports.useScript = useScript;","map":{"version":3,"sources":["../../src/hooks/useScript.ts"],"names":[],"mappings":";;;;;;AAAA;;;AAGG;;AACH,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AASO,IAAM,SAAS,GAAG,UAAC,GAAD,EAAa;AAC9B,MAAA,EAAA,GAAsB,OAAA,CAAA,QAAA,CAA6B,GAA7B,CAAtB;AAAA,MAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP;AAAA,MAAS,SAAS,GAAA,EAAA,CAAA,CAAA,CAAlB;;AACA,MAAA,EAAA,GAAgC,OAAA,CAAA,QAAA,CACpC,GAAG,GAAG,SAAH,GAAe,UADkB,CAAhC;AAAA,MAAC,WAAW,GAAA,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAc,cAAc,GAAA,EAAA,CAAA,CAAA,CAA5B,CAF8B,CAMpC;;;AACA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,kBAAe,MAAf,GAAqB,KAA5C,CAAb;;AAIA,QAAI,CAAC,MAAL,EAAa;AACX,MAAA,cAAc,CAAC,UAAD,CAAd;AACD,KAFD,MAEO,IAAI,MAAM,IAAI,CAAC,MAAf,EAAuB;AAC5B;AACA,MAAA,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAT;AACA,MAAA,MAAM,CAAC,GAAP,GAAa,MAAb;AACA,MAAA,MAAM,CAAC,KAAP,GAAe,IAAf,CAJ4B,CAM5B;;AACA,UAAM,gBAAgB,GAAG,UAAC,KAAD,EAAa;AACpC,QAAA,cAAc,CACX,KAAK,CAAC,IAAN,KAA6C,MAA7C,GACG,QADH,GAEG,OAHQ,CAAd;AAKD,OAND;;AAQA,MAAA,MAAM,CAAC,gBAAP,CAAwB,MAAxB,EAAgC,gBAAhC;AACA,MAAA,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,gBAAjC,EAhB4B,CAkB5B;;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,MAA1B;AACD;;AAED,WAAO,YAAA;AACL,UAAI,MAAJ,EAAY,MAAM,CAAC,MAAP;AACb,KAFD;AAGD,GAhCD,EAgCG,CAAC,MAAD,CAhCH;AAkCA,SAAO,CAAC,WAAD,EAAc,UAAC,SAAD,EAAmB;AAAK,WAAA,SAAS,CAAT,SAAS,CAAT;AAAoB,GAA1D,CAAP;AACD,CA1CM;;AAAM,OAAA,CAAA,SAAA,GAAS,SAAT","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useScript = void 0;\n/*\n * This is an enhanced version of useScript by \"useHooks.com\":\n * https://usehooks.com/useScript/\n */\nvar react_1 = require(\"react\");\nvar useScript = function (src) {\n    var _a = react_1.useState(src), source = _a[0], setSource = _a[1];\n    var _b = react_1.useState(src ? 'loading' : 'unloaded'), scriptState = _b[0], setScriptState = _b[1];\n    // on state change\n    react_1.useEffect(function () {\n        var script = document.querySelector(\"script[src=\\\"\" + source + \"\\\"]\");\n        if (!source) {\n            setScriptState('unloaded');\n        }\n        else if (source && !script) {\n            // if script is not in DOM yet, add it\n            script = document.createElement('script');\n            script.src = source;\n            script.async = true;\n            // callback on script load/error to update the hooks state\n            var setStateCallback = function (event) {\n                setScriptState(event.type === 'load'\n                    ? 'active'\n                    : 'error');\n            };\n            script.addEventListener('load', setStateCallback);\n            script.addEventListener('error', setStateCallback);\n            // attach the script to the DOM\n            document.body.appendChild(script);\n        }\n        return function () {\n            if (script)\n                script.remove();\n        };\n    }, [source]);\n    return [scriptState, function (sourceUrl) { return setSource(sourceUrl); }];\n};\nexports.useScript = useScript;\n//# sourceMappingURL=useScript.js.map"]},"metadata":{},"sourceType":"script"}