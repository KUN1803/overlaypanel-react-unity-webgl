import { HTMLAttributes, VFC } from 'react';
import { UnityContext } from '../lib/context';
export declare type UnityRendererProps = Omit<HTMLAttributes<HTMLCanvasElement>, 'ref'> & {
    context?: UnityContext;
    onUnityProgressChange?: (progress: number) => void;
    onUnityReadyStateChange?: (ready: boolean) => void;
    onUnityError?: (error: Error) => void;
};
/**
 * A components that renders a Unity WebGL build from a given configuration
 * context. Allows bidirectional communication and loading progress tracking.
 *
 * @param {UnityRendererProps} props Configurtion context, Unity-specific
 * callback handlers and default React props for a `HTMLCanvasElement`.
 * Note that `ref` is not available due to internal use.
 * @returns {JSX.Element | null} A `JSX.Element` containing the renderer,
 * or `null` if not initialized yet.
 */
export declare const UnityRenderer: VFC<UnityRendererProps>;
//# sourceMappingURL=UnityRenderer.d.ts.map